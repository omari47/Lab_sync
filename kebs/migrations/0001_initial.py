# Generated by Django 5.2 on 2025-04-10 13:22

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Sample',
            fields=[
                ('sample_id', models.AutoField(primary_key=True, serialize=False)),
                ('sample_type', models.CharField(choices=[('Food', 'Food'), ('Chemical', 'Chemical'), ('Textile', 'Textile'), ('Other', 'Other')], max_length=100)),
                ('sample_origin', models.CharField(max_length=100)),
                ('batch_number', models.CharField(max_length=50, unique=True)),
                ('testing_status', models.CharField(choices=[('Pending', 'Pending'), ('In Progress', 'In Progress'), ('Completed', 'Completed')], default='Pending', max_length=20)),
                ('test_date', models.DateField(auto_now_add=True)),
                ('metadata', models.TextField(blank=True, null=True)),
                ('submitted_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('submitted_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='submitted_samples', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Sample',
                'verbose_name_plural': 'Samples',
                'ordering': ['-test_date', '-sample_id'],
            },
        ),
        migrations.CreateModel(
            name='Label',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label_data', models.JSONField(blank=True, null=True)),
                ('generated_date', models.DateTimeField(auto_now_add=True)),
                ('expiry_date', models.DateField()),
                ('certification_number', models.CharField(blank=True, max_length=50, unique=True)),
                ('pdf', models.FileField(blank=True, null=True, upload_to='labels/')),
                ('qr_code', models.ImageField(blank=True, null=True, upload_to='qr_codes/')),
                ('generated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='generated_labels', to=settings.AUTH_USER_MODEL)),
                ('sample', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='label', to='kebs.sample')),
            ],
        ),
        migrations.CreateModel(
            name='SampleTestResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quality_analysis', models.TextField()),
                ('compliance_status', models.BooleanField(choices=[(True, 'Compliant'), (False, 'Non-Compliant')], default=False)),
                ('test_date', models.DateTimeField(auto_now_add=True)),
                ('expiry_date', models.DateTimeField()),
                ('conducted_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='conducted_tests', to=settings.AUTH_USER_MODEL)),
                ('sample', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_results', to='kebs.sample')),
            ],
            options={
                'verbose_name': 'Sample Test Result',
                'verbose_name_plural': 'Sample Test Results',
                'ordering': ['-test_date'],
            },
        ),
        migrations.CreateModel(
            name='TestResultDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parameters', models.JSONField(blank=True, null=True)),
                ('additional_notes', models.TextField(blank=True, null=True)),
                ('test_result', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='detail', to='kebs.sampletestresult')),
            ],
        ),
    ]
